angular.module("BrewMatic",["ui.router","angular-loading-bar"]).config(["$stateProvider","$urlRouterProvider",function(e,t){t.otherwise("/home"),e.state("home",{url:"/home",templateUrl:"/html/home/index.html",controller:"homeController"}).state("new",{url:"/new",templateUrl:"/html/brewGuide/new/index.html",controller:"newController"}).state("resume",{url:"/resume",templateUrl:"/html/brewGuide/resume/index.html",controller:"resumeController"}).state("displayBrew",{url:"/brew/:brewId",templateUrl:"/html/brewGuide/display/index.html",controller:"displayController"}).state("tempLog",{url:"/tempLog",templateUrl:"/html/tempLog/index.html",controller:"tempLogController"}).state("about",{url:"/about",templateUrl:"/html/about/index.html",controller:"aboutController"})}]).config(["$httpProvider",function(e){e.defaults.headers.get||(e.defaults.headers.get={}),e.defaults.headers.get["If-Modified-Since"]="Mon, 26 Jul 1997 05:00:00 GMT",e.defaults.headers.get["Cache-Control"]="no-cache",e.defaults.headers.Pragma="no-cache"}]);var serviceBase="http://localhost:5000/api/";angular.module("BrewMatic").constant("ngAuthSettings",{apiServiceBaseUri:serviceBase,clientId:"ngAuthApp"}),angular.module("BrewMatic").controller("aboutController",["$scope","$window",function(e,t){"use strict";var r=this;r.loadData=function(){console.log("hello world. about")},r.loadData()}]),angular.module("BrewMatic").service("BrewGuideService",["$http","$q","ngAuthSettings","pageHelperService",function(e,t,r,n){"use strict";var o=this,a=r.apiServiceBaseUri;o.getDefaultSetup=function(){return t(function(t,r){e.get(a+"brewGuide/GetDefaultSetup").success(function(e){t(e)}).error(n.handleError)})},o.getBrew=function(r){return t(function(t,o){e.get(a+"brewGuide/"+r).success(function(e){t(e)}).error(n.handleError)})},o.getBrewHistory=function(r){return t(function(t,o){e.get(a+"brewGuide/getBrewHistory/"+r).success(function(e){t(e)}).error(n.handleError)})},o.getCurrentBrew=function(){return t(function(t,r){e.get(a+"brewGuide/getLatest").success(function(e){t(e)}).error(n.handleError)})},o.getDataCapture=function(r){return t(function(t,o){e.get(a+"datacapture/"+r).success(function(e){t(e)}).error(n.handleError)})},o.getDefinedDataCaptureValues=function(r){return t(function(t,o){e.get(a+"datacapture/getDefinedValues/"+r).success(function(e){t(e)}).error(n.handleError)})},o.saveDataCapture=function(r){return t(function(t,o){e.post(a+"datacapture",r).success(function(e){t(e),n.pushOkMessage("Successfully saved data capture values")}).error(n.handleError)})},o.startNewBrew=function(r){return t(function(t,o){e.post(a+"brewGuide/StartNewBrew",r).success(function(e){t(e),n.pushOkMessage("Brew was started successfully")}).error(n.handleError)})},o.goToNextStep=function(r){return t(function(t,o){e.post(a+"brewGuide/goToNextStep",r).success(function(e){t(e),n.pushOkMessage("Successfully moved to next step")}).error(n.handleError)})},o.goBackOneStep=function(r){return t(function(t,o){e.post(a+"brewGuide/goBackOneStep",r).success(function(e){t(e),n.pushOkMessage("Successfully moved to previous step")}).error(n.handleError)})}}]),angular.module("BrewMatic").service("pageHelperService",["$http","$q","$rootScope","ngAuthSettings",function(e,t,r,n){"use strict";var o=this;n.apiServiceBaseUri;o.handleError=function(e,t){if(console.log(e),e){if(404===t){r.errors=r.errors||[];var n="404: Url not found. ";throw{Message:n,ExceptionMessage:""}}throw e}},o.pushOkMessage=function(e){r.messages=r.messages||[],r.messages.push(e),setTimeout(function(){var t=r.messages.indexOf(e);r.messages.splice(t,1),r.$apply()},3e3)}}]),angular.module("BrewMatic").filter("splitInLines",["$sce",function(e){return function(t){t=t||"";for(var r=t.split("."),n="<ul>",o=0;o<r.length;o++)""!==r[o].trim()&&(n=n+"<li>"+r[o]+"</li>");return e.trustAsHtml(n+"<ul>")}}]),angular.module("BrewMatic").controller("homeController",["$scope","$window","$timeout","homeControllerService",function(e,t,r,n){"use strict";var o,a=this;a.loadLastLog=function(){n.getLastLog().then(function(t){e.lastLog=t})},a.updateIfNotChangedAfterNSeconds=function(e,t,a){o&&r.cancel(o),o=r(function(){n.saveTargetTemperature(e,t).then(function(e){console.log("Changes was saved")})},1e3*a)},a.loadData=function(){a.loadLastLog(),n.getTargetTemperature().then(function(t){e.targetTemperature=t,e.$watchGroup(["targetTemperature.target1","targetTemperature.target2"],function(e,t,r){var n=e[0],o=e[1],u=t[0],s=t[1];n===u&&o===s||n&&""!==n&&o&&""!==o&&(console.log(angular.isNumber(parseFloat(n))),angular.isNumber(parseFloat(n))&&angular.isNumber(parseFloat(o))&&a.updateIfNotChangedAfterNSeconds(n,o,3))})})},a.loadData();var u=function(){r(function(){a.loadLastLog(),u()},1e3)};u()}]),angular.module("BrewMatic").service("homeControllerService",["$http","$q","ngAuthSettings","pageHelperService",function(e,t,r,n){"use strict";var o=this,a=r.apiServiceBaseUri;o.getLastLog=function(){return t(function(t,r){e.get(a+"brewStatusLog").success(function(e){t(e)}).error(n.handleError)})},o.getTargetTemperature=function(){return t(function(t,r){e.get(a+"targetTemperature").success(function(e){t(e)}).error(n.handleError)})},o.saveTargetTemperature=function(r,o){return t(function(t,u){e.post(a+"targetTemperature",{target1:r,target2:o}).success(function(e){t(e)}).error(n.handleError)})}}]),angular.module("BrewMatic").controller("tempLogController",["$scope","$window","tempLogService",function(e,t,r){"use strict";var n=this;n.loadData=function(){r.getBrewLogs().then(function(t){e.brewLogs=t})},n.loadData()}]),angular.module("BrewMatic").service("tempLogService",["$http","$q","ngAuthSettings","pageHelperService",function(e,t,r,n){"use strict";var o=this,a=r.apiServiceBaseUri;o.getBrewLogs=function(){return t(function(t,r){e.get(a+"brewStatusLog/get50latest").success(function(e){t(e)}).error(n.handleError)})}}]),angular.module("BrewMatic").controller("displayController",["$scope","$window","BrewGuideService","$stateParams","$state","$timeout",function(e,t,r,n,o,a){"use strict";var u,s=this;e.saving=null;var i=n.brewId;s.saveIfNotChangedAfterNSeconds=function(t){u&&a.cancel(u),u=a(function(){r.saveDataCapture(e.dataCaptureValues).then(function(t){e.saving=null,console.log("Changes was saved"),s.getDefinedDataCaptureValues()})},1e3*t)},s.getDefinedDataCaptureValues=function(){r.getDefinedDataCaptureValues(i).then(function(t){e.definedDataCaptureValues=t})},s.loadData=function(){r.getBrew(i).then(function(t){e.brew=t,e.startTime=t.currentStep.startTime,s.updateStepTime(),t.currentStep.completeTime&&(e.completeTime=t.currentStep.completeTime,s.updateCountdown()),r.getDataCapture(t.currentStep.id).then(function(t){e.dataCaptureValues=t,e.$watch("dataCaptureValues",function(t,r,n){t!==r&&(e.saving=!0,s.saveIfNotChangedAfterNSeconds(1))},!0)}),s.getDefinedDataCaptureValues()}),r.getBrewHistory(i).then(function(t){e.brewHistory=t})},s.updateStepTime=function(){a(function(){var t=moment(e.startTime);e.stepTime=moment.utc(moment().diff(t)).format("HH:mm:ss"),s.updateStepTime()},1e3)},s.updateCountdown=function(){a(function(){var t=moment(e.completeTime);e.countDown=moment.utc(t.diff(moment())).format("HH:mm:ss"),s.updateCountdown()},1e3)},s.loadData(),e.goToNextStep=function(){r.goToNextStep(i).then(function(e){o.go("displayBrew",{brewId:i},{reload:!0})})},e.goBackOneStep=function(){confirm("Are you sure you want to abort the current step and return to the previous?")&&r.goBackOneStep(i).then(function(e){o.go("displayBrew",{brewId:i},{reload:!0})})}}]),angular.module("BrewMatic").controller("newController",["$scope","$window","BrewGuideService","$state",function(e,t,r,n){"use strict";var o=this;o.loadData=function(){r.getDefaultSetup().then(function(t){e.setup=t,console.log("test")})},o.loadData(),e.startNewBrew=function(){r.startNewBrew(e.setup).then(function(e){n.go("displayBrew",{brewId:e}),console.log({test:e})})}}]),angular.module("BrewMatic").controller("resumeController",["$scope","$window","BrewGuideService","$state",function(e,t,r,n){"use strict";var o=this;o.loadData=function(){r.getCurrentBrew().then(function(t){t>0?n.go("displayBrew",{brewId:t}):e.nothingToResume=!0})},o.loadData()}]),angular.module("BrewMatic").directive("decimalChanger",function(){return{restrict:"A",scope:{ngModel:"=",min:"@",max:"@"},link:function(e,t,r){Number.prototype.round=function(e){return e=e||10,parseFloat(this.toFixed(e))},e.changeTarget=function(t){var r=e.ngModel.round(1)+t;r>=e.min&&r<=e.max&&(e.ngModel+=t)}},templateUrl:"html/shared/decimalChangerlDirective/index.html"}});