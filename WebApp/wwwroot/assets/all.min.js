angular.module("BrewMatic",["ui.router","angular-loading-bar"]).config(["$stateProvider","$urlRouterProvider",function(e,t){t.otherwise("/home"),e.state("home",{url:"/home",templateUrl:"/html/home/index.html",controller:"homeController"}).state("tempLog",{url:"/tempLog",templateUrl:"/html/tempLog/index.html",controller:"tempLogController"}).state("about",{url:"/about",templateUrl:"/html/about/index.html",controller:"aboutController"})}]).config(["$httpProvider",function(e){e.defaults.headers.get||(e.defaults.headers.get={}),e.defaults.headers.get["If-Modified-Since"]="Mon, 26 Jul 1997 05:00:00 GMT",e.defaults.headers.get["Cache-Control"]="no-cache",e.defaults.headers.Pragma="no-cache"}]);var serviceBase="http://localhost:5000/api/";angular.module("BrewMatic").constant("ngAuthSettings",{apiServiceBaseUri:serviceBase,clientId:"ngAuthApp"}),angular.module("BrewMatic").controller("aboutController",["$scope","$window",function(e,t){"use strict";var r=this;r.loadData=function(){console.log("hello world. about")},r.loadData()}]),angular.module("BrewMatic").controller("homeController",["$scope","$window","$timeout","homeControllerService",function(e,t,r,o){"use strict";var a=this;a.loadLastLog=function(){o.getLastLog().then(function(t){e.lastLog=t})},a.loadData=function(){a.loadLastLog(),o.getTargetTemperature().then(function(t){e.targetTemperature=t,e.$watchGroup(["targetTemperature.target1","targetTemperature.target2"],function(e,t,r){o.saveTargetTemperature(e[0],e[1]).then(function(e){console.log("Changes was saved")})})})},a.loadData();var n=function(){r(function(){a.loadLastLog(),n()},1e3)};n()}]),angular.module("BrewMatic").service("homeControllerService",["$http","$q","ngAuthSettings","pageHelperService",function(e,t,r,o){"use strict";var a=this,n=r.apiServiceBaseUri;a.getLastLog=function(){return t(function(t,r){e.get(n+"brewStatusLog").success(function(e){t(e)}).error(o.handleError)})},a.getTargetTemperature=function(){return t(function(t,r){e.get(n+"targetTemperature").success(function(e){t(e)}).error(o.handleError)})},a.saveTargetTemperature=function(r,a){return t(function(t,s){e.post(n+"targetTemperature",{target1:r,target2:a}).success(function(e){t(e)}).error(o.handleError)})}}]),angular.module("BrewMatic").service("pageHelperService",["$http","$q","$rootScope","ngAuthSettings",function(e,t,r,o){"use strict";var a=this;o.apiServiceBaseUri;a.handleError=function(e,t){if(e){if(404===t){r.errors=r.errors||[];var o="404: Url not found. ";throw{Message:o,ExceptionMessage:""}}throw e}},a.pushOkMessage=function(e){r.messages=r.messages||[],r.messages.push(e),setTimeout(function(){var t=r.messages.indexOf(e);r.messages.splice(t,1),r.$apply()},3e3)}}]),angular.module("BrewMatic").controller("tempLogController",["$scope","$window","tempLogService",function(e,t,r){"use strict";var o=this;o.loadData=function(){r.getBrewLogs().then(function(t){e.brewLogs=t})},o.loadData()}]),angular.module("BrewMatic").service("tempLogService",["$http","$q","ngAuthSettings","pageHelperService",function(e,t,r,o){"use strict";var a=this,n=r.apiServiceBaseUri;a.getBrewLogs=function(){return t(function(t,r){e.get(n+"brewStatusLog/get50latest").success(function(e){t(e)}).error(o.handleError)})}}]);