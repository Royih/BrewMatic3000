angular.module("BrewMatic",["ui.router","angular-loading-bar"]).config(["$stateProvider","$urlRouterProvider",function(e,t){t.otherwise("/home"),e.state("home",{url:"/home",templateUrl:"/html/home/index.html",controller:"homeController"}).state("new",{url:"/new",templateUrl:"/html/brewGuide/new/index.html",controller:"newController"}).state("resume",{url:"/resume",templateUrl:"/html/brewGuide/resume/index.html",controller:"resumeController"}).state("displayBrew",{url:"/brew/:brewId",templateUrl:"/html/brewGuide/display/index.html",controller:"displayController"}).state("tempLog",{url:"/tempLog",templateUrl:"/html/tempLog/index.html",controller:"tempLogController"}).state("about",{url:"/about",templateUrl:"/html/about/index.html",controller:"aboutController"})}]).config(["$httpProvider",function(e){e.defaults.headers.get||(e.defaults.headers.get={}),e.defaults.headers.get["If-Modified-Since"]="Mon, 26 Jul 1997 05:00:00 GMT",e.defaults.headers.get["Cache-Control"]="no-cache",e.defaults.headers.Pragma="no-cache"}]);var serviceBase="http://localhost:5000/api/";angular.module("BrewMatic").constant("ngAuthSettings",{apiServiceBaseUri:serviceBase,clientId:"ngAuthApp"}),angular.module("BrewMatic").controller("aboutController",["$scope","$window",function(e,t){"use strict";var r=this;r.loadData=function(){console.log("hello world. about")},r.loadData()}]),angular.module("BrewMatic").service("BrewGuideService",["$http","$q","ngAuthSettings","pageHelperService",function(e,t,r,o){"use strict";var n=this,a=r.apiServiceBaseUri;n.getDefaultSetup=function(){return t(function(t,r){e.get(a+"brewGuide/GetDefaultSetup").success(function(e){t(e)}).error(o.handleError)})},n.getBrew=function(r){return t(function(t,n){e.get(a+"brewGuide/"+r).success(function(e){t(e)}).error(o.handleError)})},n.getBrewHistory=function(r){return t(function(t,n){e.get(a+"brewGuide/getBrewHistory/"+r).success(function(e){t(e)}).error(o.handleError)})},n.getCurrentBrew=function(){return t(function(t,r){e.get(a+"brewGuide/getLatest").success(function(e){t(e)}).error(o.handleError)})},n.getDataCapture=function(r){return t(function(t,n){e.get(a+"datacapture/"+r).success(function(e){t(e)}).error(o.handleError)})},n.startNewBrew=function(r){return t(function(t,n){e.post(a+"brewGuide/StartNewBrew",r).success(function(e){t(e),o.pushOkMessage("Brew was started successfully")}).error(o.handleError)})},n.goToNextStep=function(r){return t(function(t,n){e.post(a+"brewGuide/goToNextStep",r).success(function(e){t(e),o.pushOkMessage("Successfully moved to next step")}).error(o.handleError)})},n.goBackOneStep=function(r){return t(function(t,n){e.post(a+"brewGuide/goBackOneStep",r).success(function(e){t(e),o.pushOkMessage("Successfully moved to previous step")}).error(o.handleError)})}}]),angular.module("BrewMatic").service("pageHelperService",["$http","$q","$rootScope","ngAuthSettings",function(e,t,r,o){"use strict";var n=this;o.apiServiceBaseUri;n.handleError=function(e,t){if(console.log(e),e){if(404===t){r.errors=r.errors||[];var o="404: Url not found. ";throw{Message:o,ExceptionMessage:""}}throw e}},n.pushOkMessage=function(e){r.messages=r.messages||[],r.messages.push(e),setTimeout(function(){var t=r.messages.indexOf(e);r.messages.splice(t,1),r.$apply()},3e3)}}]),angular.module("BrewMatic").filter("splitInLines",["$sce",function(e){return function(t){t=t||"";for(var r=t.split("."),o="<ul>",n=0;n<r.length;n++)""!==r[n].trim()&&(o=o+"<li>"+r[n]+"</li>");return e.trustAsHtml(o+"<ul>")}}]),angular.module("BrewMatic").controller("homeController",["$scope","$window","$timeout","homeControllerService",function(e,t,r,o){"use strict";var n,a=this;a.loadLastLog=function(){o.getLastLog().then(function(t){e.lastLog=t})},a.updateIfNotChangedAfterNSeconds=function(e,t,a){n&&r.cancel(n),n=r(function(){o.saveTargetTemperature(e,t).then(function(e){console.log("Changes was saved")})},1e3*a)},a.loadData=function(){a.loadLastLog(),o.getTargetTemperature().then(function(t){e.targetTemperature=t,e.$watchGroup(["targetTemperature.target1","targetTemperature.target2"],function(e,t,r){var o=e[0],n=e[1],u=t[0],i=t[1];console.log({newTemp1:o,oldTemp1:u,newTemp2:n,oldTemp2:i}),o===u&&n===i||(console.log("Changes found"),o&&""!==o&&n&&""!==n&&(console.log("Input found"),console.log(angular.isNumber(parseFloat(o))),angular.isNumber(parseFloat(o))&&angular.isNumber(parseFloat(n))&&(console.log("Numeric input found"),a.updateIfNotChangedAfterNSeconds(o,n,3))))})})},a.loadData();var u=function(){r(function(){a.loadLastLog(),u()},1e3)};u()}]),angular.module("BrewMatic").service("homeControllerService",["$http","$q","ngAuthSettings","pageHelperService",function(e,t,r,o){"use strict";var n=this,a=r.apiServiceBaseUri;n.getLastLog=function(){return t(function(t,r){e.get(a+"brewStatusLog").success(function(e){t(e)}).error(o.handleError)})},n.getTargetTemperature=function(){return t(function(t,r){e.get(a+"targetTemperature").success(function(e){t(e)}).error(o.handleError)})},n.saveTargetTemperature=function(r,n){return t(function(t,u){e.post(a+"targetTemperature",{target1:r,target2:n}).success(function(e){t(e)}).error(o.handleError)})}}]),angular.module("BrewMatic").controller("tempLogController",["$scope","$window","tempLogService",function(e,t,r){"use strict";var o=this;o.loadData=function(){r.getBrewLogs().then(function(t){e.brewLogs=t})},o.loadData()}]),angular.module("BrewMatic").service("tempLogService",["$http","$q","ngAuthSettings","pageHelperService",function(e,t,r,o){"use strict";var n=this,a=r.apiServiceBaseUri;n.getBrewLogs=function(){return t(function(t,r){e.get(a+"brewStatusLog/get50latest").success(function(e){t(e)}).error(o.handleError)})}}]),angular.module("BrewMatic").controller("resumeController",["$scope","$window","BrewGuideService","$state",function(e,t,r,o){"use strict";var n=this;n.loadData=function(){r.getCurrentBrew().then(function(t){t>0?o.go("displayBrew",{brewId:t}):e.nothingToResume=!0})},n.loadData()}]),angular.module("BrewMatic").controller("newController",["$scope","$window","BrewGuideService","$state",function(e,t,r,o){"use strict";var n=this;n.loadData=function(){r.getDefaultSetup().then(function(t){e.setup=t,console.log("test")})},n.loadData(),e.startNewBrew=function(){r.startNewBrew(e.setup).then(function(e){o.go("displayBrew",{brewId:e}),console.log({test:e})})}}]),angular.module("BrewMatic").controller("displayController",["$scope","$window","BrewGuideService","$stateParams","$state","$timeout",function(e,t,r,o,n,a){"use strict";var u=this,i=o.brewId;u.loadData=function(){r.getBrew(i).then(function(t){e.brew=t,e.startTime=t.currentStep.startTime,u.updateStepTime(),t.currentStep.completeTime&&(e.completeTime=t.currentStep.completeTime,u.updateCountdown()),r.getDataCapture(t.currentStep.order).then(function(t){e.dataCaptureValues=t})}),r.getBrewHistory(i).then(function(t){e.brewHistory=t})},u.updateStepTime=function(){a(function(){var t=moment(e.startTime);e.stepTime=moment.utc(moment().diff(t)).format("HH:mm:ss"),u.updateStepTime()},1e3)},u.updateCountdown=function(){a(function(){var t=moment(e.completeTime);e.countDown=moment.utc(t.diff(moment())).format("HH:mm:ss"),u.updateCountdown()},1e3)},u.loadData(),e.goToNextStep=function(){r.goToNextStep(i).then(function(e){n.go("displayBrew",{brewId:i},{reload:!0})})},e.goBackOneStep=function(){confirm("Are you sure you want to abort the current step and return to the previous?")&&r.goBackOneStep(i).then(function(e){n.go("displayBrew",{brewId:i},{reload:!0})})}}]),angular.module("BrewMatic").directive("decimalChanger",function(){return{restrict:"A",scope:{ngModel:"=",min:"@",max:"@"},link:function(e,t,r){Number.prototype.round=function(e){return e=e||10,parseFloat(this.toFixed(e))},e.changeTarget=function(t){var r=e.ngModel.round(1)+t;r>=e.min&&r<=e.max&&(e.ngModel+=t)}},templateUrl:"html/shared/decimalChangerlDirective/index.html"}});